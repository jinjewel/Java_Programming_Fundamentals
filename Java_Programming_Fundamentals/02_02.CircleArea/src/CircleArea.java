// 식별자란 클래스, 변수, 상수, 메소드 등에 붙이는 이름
// '_', '$'를 제외한 특수 문자, 공백 또는 탭은 식별자로 사용 불가
// 유니코드 문자와 한글은 사용가능하지만 자바언어 키워드는 사용 불가
// 길이 제한 없으며, 대소문자는 구별하고, 첫번째 문자로 숫자는 불가능 하지만 '_', '$'는 사용가능
// 자바 키워드
// abstract, boolean, assert, catch, extends, goto, implements, instanceof
// native, protected, strictf, super, synchronized, this, transient, volatile

// 클래스이 이름
// 첫번째 문자는 대문자 또는 각 단어의 첫문자만 대문자로 생성

// 상수 이름
// 모든 문자를 대무낮로 표시

// 자바의 데이터 타입
// 기본 타입 : 8개
// boolean(1)
// char(2)
// byte(1), short(2), int(4), long(8)
// float(4), double(8)
// 래퍼런스(참조) 타입 : 1개(용도 3가지)
// 배열(array), 클래스(class), 인터페이스(interface)

// 문자열
// 문자열은 기본타입이 아니며 String 클래스로 문자열 표현

// 변수
// 프로그램 실행 중에 값을 임시 저장하기 위한 공간, 데이터 타입에서 정한 크기의 메모리 할당

// 리터럴
// 프로그램에서 직접 표현한 값
// 정수, 실수, 문자, 논리, 문자열 리터렬 존재

// 정수 리터럴
// 10진수 -> 15 
// 2진수 -> 0b0101 : 0b로 시작하면 2진수, 십진수로 5
// 8진수 -> 015 : 0으로 시작하면 8진수, 십진수로 13
// 16진수 -> 0x15 : 0x로 시작하면 16진수, 십진수로 21
// ㅣong 타입 리터럴은 숫자 뒤에 L 또는 l을 붙여 표시, 예) long g = 24L;

// 실수 시터럴
// double 타입으로 컴파일 하며 숫자 뒤에 f, d을 명시적으로 붙이기도 함

// 문자 리터럴
// 단일 인용부호 ''로 문자 표현
// 역슬래시u 다음에 4자리 16진수는 2바이트의 유니코드를 나타낸다.

// 특수문자 리터럴
// 백슬래시(\)로 시작

// 논리 리터럴
// true, false 2개가 존재하며 boolean 타입 변수에 치환하거나 조건문에 이용
// 1,0 을 자바에선 참, 거짓으로 사용 불가

// null 리터럴
// 레퍼런스 에 대입 사용

// 문자열 리터럴(스트링 리터럴)
// 인중 인용부호로 묶어 표현

// 숫자 리터럴
// 일정한 범위에서 언더스코어(언더바, _) 허용
// 리터럴의 끝, 소수점 앞뒤, 자료형표시 앞, 0x 중간뒤 에서는 사용할 수 없다.

// var 키워드
// 지역 변수의 선언에만 사용가능 예) var price = 200; -> price는 int 타입으로 결정
// 변수 선언문에 반드시 초깃값 지정해야 한다. 예) var name; -> 컴파일 오류

// 상수
// final 키워드를 사용하여 선언하며, 선언시 초기값 지정해야 하고 실행중에 값을 변경할 수 없다.

public class CircleArea {
	public static void main(String[] args) {
		
		// 상수로 선언
		// 원주율을 상수로 선언
		// 변수이름은 대문자로 선언하며, final를 붙여서 선언한다.
		final double PI = 3.14;
		
		// double 자료형으로 선언한다.
		double radius = 10.0; // 원의 반지름
		double circleArea = radius*radius*PI; // 원의 면적 계산
		
		// 원의 면적을 화면에 출력한다.
		// System.out.println를 사용하여 출력
		System.out.println("원의 면적 = " + circleArea);
	}
}

// 출력
// 원의 면적 = 314.0


